#!/usr/bin/env node

const spawn = require('child_process').spawn
const compileConf = require('../lib/compile-conf')

// compile with logging
const compile = () => {
  console.log('Compiling...')
  return compileConf().on('end', () => {
    console.log('Compiling successful')
  })
}

// initial compile
compile().on('end', () => {
  // start nginx
  const nginxProcess = spawn('nginx', ['-g', 'daemon off;'], {stdio: 'inherit'})

  // TODO: do TERM, INT, QUIT need to be here?
  // pass signals through to nginx
  ;['USR1', 'USR2', 'WINCH'].forEach(signal => {
    signal = 'SIG' + signal
    process.on(signal, () => nginxProcess.kill(signal))
  })

  // on HUP, compile and then pass to nginx
  process.on('SIGHUP', () => {
    compile().on('end', () => nginxProcess.kill('SIGHUP'))
  })
})
